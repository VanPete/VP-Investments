name: VP Investments Pipeline

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
  schedule:
    # Weekdays at ~08:30 ET (12:30 UTC during EDT)
    - cron: '30 12 * * 1-5'
    # Weekdays at ~17:00 ET (21:00 UTC during EDT)
    - cron: '0 21 * * 1-5'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: vp-pipeline
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York
      FMP_API_KEY: ${{ secrets.FMP_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SEC_USER_AGENT: ${{ secrets.SEC_USER_AGENT }}
      SEC_EDGAR_COOLDOWN_SEC: ${{ vars.SEC_EDGAR_COOLDOWN_SEC }}
      SEC_EDGAR_FORCE: ${{ vars.SEC_EDGAR_FORCE }}
      SEC_EDGAR_DISABLED: ${{ vars.SEC_EDGAR_DISABLED }}
      REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
      REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
      REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pipeline (once)
        run: |
          set -e
          python "run_all.py" --once --stream --timeout 1800
      - name: Prepare Pages index (fallback)
        run: |
          mkdir -p outputs
          if [ ! -f outputs/index.html ]; then
            echo '<meta http-equiv="refresh" content="0; url=dashboard/dashboard.html">' > outputs/index.html
          fi

      - name: Upload outputs artifact
        uses: actions/upload-artifact@v4
        with:
          name: vp-outputs-${{ github.run_number }}
          path: outputs
          if-no-files-found: warn
          retention-days: 30

      - name: Upload logs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vp-logs-${{ github.run_number }}
          path: outputs/logs
          if-no-files-found: warn
          retention-days: 30

      - name: Persist outputs to data branch (cumulative)
        env:
          REPO: ${{ github.repository }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TS=$(date -u +'%Y%m%dT%H%M%SZ')
          rm -rf data-repo
          git clone "https://x-access-token:${TOKEN}@github.com/${REPO}.git" data-repo
          cd data-repo
          # Configure author for commits in this repo (no global changes)
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          if git ls-remote --exit-code --heads origin data > /dev/null 2>&1; then
            git checkout data
          else
            git checkout --orphan data
            git commit --allow-empty -m "Initialize data branch"
            git push origin data
          fi
          mkdir -p "runs/${TS}"
          rsync -a --delete ../outputs/ "runs/${TS}/"
          git add runs
          git commit -m "Add run ${TS}" || echo "No changes to commit"
          git push origin data

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: outputs

  deploy:
    needs: run
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

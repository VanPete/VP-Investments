name: VP Investments Pipeline

on:
  workflow_dispatch:
  schedule:
    # 08:30 ET (EDT) -> 12:30 UTC, Mon-Fri (note: DST shifts will offset by 1 hour)
    - cron: '30 12 * * 1-5'
    # 17:00 ET (EDT) -> 21:00 UTC, Mon-Fri (note: DST shifts will offset by 1 hour)
    - cron: '0 21 * * 1-5'

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write

concurrency:
  group: vp-pipeline
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      USE_ENV_CONFIG: '1'
      SCHED_ENABLED: '0'
      SCHED_TWICE_DAILY: '0'
      TZ: America/New_York
      # Secrets (set these in repo Settings > Secrets and variables > Actions)
      FMP_API_KEY: ${{ secrets.FMP_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pipeline (once)
        run: |
          python run_all.py --once --stream --timeout 1800

      - name: Prepare Pages index redirect
        run: |
          mkdir -p outputs
          echo '<meta http-equiv="refresh" content="0; url=dashboard/dashboard.html">' > outputs/index.html

      - name: Upload outputs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vp-outputs-${{ github.run_number }}
          path: outputs
          if-no-files-found: warn
          retention-days: 30

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: outputs

      - name: Persist outputs to data branch (cumulative)
        run: |
          set -e
          REPO="https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git"
          git clone --depth 1 --branch data "$REPO" data-repo || (
            git clone --depth 1 "$REPO" data-repo && cd data-repo && git checkout --orphan data && git rm -rf . || true
          )
          cd data-repo
          STAMP=$(date -u +%Y-%m-%d_%H-%M-%S)
          mkdir -p "runs/$STAMP"
          cp -r ../outputs/* "runs/$STAMP/"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Add outputs for run ${{ github.run_number }} at $STAMP"
          git push "$REPO" HEAD:data

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `VP pipeline failed: run #${{ github.run_number }}`;
            const body = `The scheduled run failed.\n\n- Workflow: ${process.env.GITHUB_WORKFLOW}\n- Run: https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}\n\nArtifacts (if any) and logs are available in the workflow run.`;
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
              labels: ["ci-failure"]
            });
            core.info(`Created issue #${issue.number}`);

  deploy:
    needs: run
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
